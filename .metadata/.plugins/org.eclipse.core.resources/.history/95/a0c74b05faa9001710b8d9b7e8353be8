package com.timediff.service;

import java.util.Calendar;
import java.util.Date;

import com.timediff.model.MyTicket;
import com.timediff.model.TicketTime;

public class CalculateTimeDifference implements ICalculateTimeDifference{

	@Override
	public Date getResolutionTime(MyTicket tkt) {
		String ticketNumber=tkt.getTicketNumer();
		
		Calendar startCal = Calendar.getInstance();
	    startCal.setTime(tkt.getMytimeObjects().getTicketStartDate());        

	    Calendar endCal = Calendar.getInstance();
	    endCal.setTime(tkt.getMytimeObjects().getTicketEndDate());

	    int workDays = 0;

	    //Return 0 if start and end are the same
	    if (startCal.getTimeInMillis() == endCal.getTimeInMillis()) {
	        return 0;
	    }

	    if (startCal.getTimeInMillis() > endCal.getTimeInMillis()) {
	        startCal.setTime(endDate);
	        endCal.setTime(startDate);
	    }

	    do {
	       //excluding start date
	        startCal.add(Calendar.DAY_OF_MONTH, 1);
	        if (startCal.get(Calendar.DAY_OF_WEEK) != Calendar.SATURDAY && startCal.get(Calendar.DAY_OF_WEEK) != Calendar.SUNDAY) {
	            ++workDays;
	        }
	    } while (startCal.getTimeInMillis() < endCal.getTimeInMillis()); //excluding end date

	    return workDays;
		return null;
	}

	@Override
	public MyTicket getTicketDEtails(MyTicket tktDetails) {
		MyTicket tktDetailsTemp= new MyTicket();
		//HArdcoding TicketTime for instance.
		TicketTime ticketTime= new TicketTime();
		Date startDateTime= new Date();
		Date endDateTime= new Date();
		ticketTime.setTicketStartDate(startDateTime);
		ticketTime.setTicketEndDate(endDateTime);

		
		tktDetailsTemp.setMytimeObjects(ticketTime);
		// TODO Auto-generated method stub
		return tktDetailsTemp;
	}
	
	

}
